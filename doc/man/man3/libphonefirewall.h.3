.TH "libphonefirewall.h" 3 "17 May 2008" "Version v0.01" "Phone Firewall" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libphonefirewall.h \- API of the phone firewall. 
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBentry\fP"
.br
.RI "\fIIncludes all informations for an \fBentry\fP. \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBMAX_LINE_LENGTH\fP   512"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBadd_blacklist_entry\fP (int country_code, int area_code, unsigned long long number, char *name, char *reason, int priority)"
.br
.ti -1c
.RI "int \fBrm_blacklist_entry\fP (unsigned long long number)"
.br
.ti -1c
.RI "char * \fBcheck_blacklist_entry\fP (int country_code, int area_code, unsigned long long number, int priority)"
.br
.ti -1c
.RI "int \fBadd_whitelist_entry\fP (int country_code, int area_code, unsigned long long number, char *name, char *reason, int priority)"
.br
.ti -1c
.RI "struct \fBentry\fP * \fBget_blacklist_entry_by_name\fP (char *name)"
.br
.ti -1c
.RI "struct \fBentry\fP * \fBget_blacklist_entry_by_number\fP (int country_code, int area_code, unsigned long long number)"
.br
.ti -1c
.RI "int \fBrm_whitelist_entry\fP (unsigned long long number)"
.br
.ti -1c
.RI "char * \fBcheck_whitelist_entry\fP (int country_code, int area_code, unsigned long long number, int priority)"
.br
.ti -1c
.RI "struct \fBentry\fP * \fBget_whitelist_entry_by_name\fP (char *name)"
.br
.ti -1c
.RI "struct \fBentry\fP * \fBget_whitelist_entry_by_number\fP (int country_code, int area_code, unsigned long long number)"
.br
.in -1c
.SH "Detailed Description"
.PP 
API of the phone firewall. 

\fBAuthor:\fP
.RS 4
Alex Oberhauser
.RE
.PP
The header file of the Phone Firewall. Blocks or accepts incoming phone calls, so it's possible to prevent disturbing phone calls. Provides a API which can used by other application to build nice programs.
.PP
Implemented for the OpenMoko framework. 
.PP
Definition in file \fBlibphonefirewall.h\fP.
.SH "Define Documentation"
.PP 
.SS "#define MAX_LINE_LENGTH   512"
.PP
Definition at line 33 of file libphonefirewall.h.
.PP
Referenced by check_blacklist_entry(), and check_whitelist_entry().
.SH "Function Documentation"
.PP 
.SS "int add_blacklist_entry (int country_code, int area_code, unsigned long long number, char * name, char * reason, int priority)"
.PP
Add a number to the blacklist. The number will be blocked after that.
.PP
\fBParameters:\fP
.RS 4
\fIcountry_code\fP The country code (for example 39 for Italy, 43 for Austria, and so one) 
.br
\fIarea_code\fP The area code which indicates your mobile operator. 
.br
\fInumber\fP The telephone number of the person (without country and area code. 
.br
\fIname\fP The name of the person. 
.br
\fIreason\fP Why you have blocked this person. 
.br
\fIpriority\fP Gives the \fBentry\fP a priority. 0 is standard. If the priority is higher the value will be also blocked/accepted if a higher priority is choosen.
.RE
.PP
\fBReturns:\fP
.RS 4
If all goes well 0 (zero) otherwise an errno code. 
.RE
.PP

.PP
Definition at line 40 of file phonefirewall_administration.c.
.PP
References BLACKLIST_PREFIX, DELIM, filename, and set_filename().
.SS "int add_whitelist_entry (int country_code, int area_code, unsigned long long number, char * name, char * reason, int priority)"
.PP
Add a number to the whitelist. The number will be accepted after that.
.PP
\fBParameters:\fP
.RS 4
\fIcountry_code\fP The country code (for example 39 for Italy, 43 for Austria, and so one) 
.br
\fIarea_code\fP The area code which indicates your mobile operator. 
.br
\fInumber\fP The telephone number of the person (without country and area code. 
.br
\fIname\fP The name of the person. 
.br
\fIreason\fP Why you have blocked this person. 
.br
\fIpriority\fP Gives the \fBentry\fP a priority. 0 is standard. If the priority is higher the value will be also blocked/accepted if a higher priority is choosen.
.RE
.PP
\fBReturns:\fP
.RS 4
If all goes well 0 (zero) otherwise an errno code. 
.RE
.PP

.PP
Definition at line 54 of file phonefirewall_administration.c.
.PP
References DELIM, filename, set_filename(), and WHITELIST_PREFIX.
.SS "char* check_blacklist_entry (int country_code, int area_code, unsigned long long number, int priority)"
.PP
Checks if a number is on the blacklist.
.PP
\fBParameters:\fP
.RS 4
\fIcountry_code\fP The country code (for example 39 for Italy, 43 for Austria, and so one) 
.br
\fIarea_code\fP The area code which indicates your mobile operator. 
.br
\fInumber\fP The telephone number of the person (without country and area code. 
.br
\fIpriority\fP Gives the \fBentry\fP a priority. 0 is standard. If the priority is higher the value will be also blocked/accepted if a higher priority is choosen.
.RE
.PP
\fBReturns:\fP
.RS 4
If noting is found NULL, otherwise the number. 
.RE
.PP

.PP
Definition at line 76 of file phonefirewall_administration.c.
.PP
References BLACKLIST_PREFIX, DELIM, filename, MAX_LINE_LENGTH, and set_filename().
.SS "char* check_whitelist_entry (int country_code, int area_code, unsigned long long number, int priority)"
.PP
Checks if a number is on the whitelist.
.PP
\fBParameters:\fP
.RS 4
\fIcountry_code\fP The country code (for example 39 for Italy, 43 for Austria, and so one) 
.br
\fIarea_code\fP The area code which indicates your mobile operator. 
.br
\fInumber\fP The telephone number of the person (without country and area code. 
.br
\fIpriority\fP Gives the \fBentry\fP a priority. 0 is standard. If the priority is higher the value will be also blocked/accepted if a higher priority is choosen.
.RE
.PP
\fBReturns:\fP
.RS 4
If noting is found NULL, otherwise the number. 
.RE
.PP

.PP
Definition at line 110 of file phonefirewall_administration.c.
.PP
References DELIM, filename, MAX_LINE_LENGTH, set_filename(), and WHITELIST_PREFIX.
.SS "struct \fBentry\fP* get_blacklist_entry_by_name (char * name)\fC [read]\fP"
.PP
Search a entrie by name.
.PP
\fBParameters:\fP
.RS 4
\fIname\fP The name of the person which is blocked.
.RE
.PP
\fBReturns:\fP
.RS 4
\fBentry\fP Returns the found \fBentry\fP. 
.RE
.PP

.SS "struct \fBentry\fP* get_blacklist_entry_by_number (int country_code, int area_code, unsigned long long number)\fC [read]\fP"
.PP
Search a entrie by number (country code + area code + number).
.PP
\fBParameters:\fP
.RS 4
\fIcountry_code\fP The country code (for example 39 for Italy, 43 for Austria, and so one) 
.br
\fIarea_code\fP The area code which indicates your mobile operator. 
.br
\fInumber\fP The telephone number of the person (without country and area code.
.RE
.PP
\fBReturns:\fP
.RS 4
\fBentry\fP Returns the found \fBentry\fP. 
.RE
.PP

.SS "struct \fBentry\fP* get_whitelist_entry_by_name (char * name)\fC [read]\fP"
.PP
Search a entrie by name.
.PP
\fBParameters:\fP
.RS 4
\fIname\fP The name of the person which is accepted.
.RE
.PP
\fBReturns:\fP
.RS 4
\fBentry\fP Returns the found \fBentry\fP. 
.RE
.PP

.SS "struct \fBentry\fP* get_whitelist_entry_by_number (int country_code, int area_code, unsigned long long number)\fC [read]\fP"
.PP
Search a entrie by number (country code + area code + number).
.PP
\fBParameters:\fP
.RS 4
\fIcountry_code\fP The country code (for example 39 for Italy, 43 for Austria, and so one) 
.br
\fIarea_code\fP The area code which indicates your mobile operator. 
.br
\fInumber\fP The telephone number of the person (without country and area code.
.RE
.PP
\fBReturns:\fP
.RS 4
\fBentry\fP Returns the found \fBentry\fP. 
.RE
.PP

.SS "int rm_blacklist_entry (unsigned long long number)"
.PP
Removes a blocked number from the blacklist.
.PP
\fBParameters:\fP
.RS 4
\fInumber\fP The number which will be deleted.
.RE
.PP
\fBReturns:\fP
.RS 4
If all goes right 0, otherwise an error code. 
.RE
.PP

.PP
Definition at line 68 of file phonefirewall_administration.c.
.SS "int rm_whitelist_entry (unsigned long long number)"
.PP
Removes a accepted number from the whitelist.
.PP
\fBParameters:\fP
.RS 4
\fInumber\fP The number which will be deleted.
.RE
.PP
\fBReturns:\fP
.RS 4
If all goes right 0, otherwise an error code. 
.RE
.PP

.PP
Definition at line 72 of file phonefirewall_administration.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Phone Firewall from the source code.
